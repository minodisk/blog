<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on I/O </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://dsk.mn/post/index.xml</link>
    <language>en-us</language>
    
    
    <updated>Sun, 15 Jun 2014 06:04:06 UTC</updated>
    
    <item>
      <title>Backbone Tips</title>
      <link>http://dsk.mn/post/backbone-tips</link>
      <pubDate>Tue, 25 Feb 2014 03:09:55 UTC</pubDate>
      
      <guid>http://dsk.mn/post/backbone-tips</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Backbone.history 関連&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Backbone.history.start()&lt;/code&gt; を実行したかどうかの判定には &lt;code&gt;Backbone.History.started&lt;/code&gt; を使う &lt;a href=&#34;https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L1386&#34;&gt;backbone/backbone.js at 1.1.2 · jashkenas/backbone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CoffeeScript Tips</title>
      <link>http://dsk.mn/post/coffeescript-tips</link>
      <pubDate>Thu, 06 Mar 2014 03:32:49 UTC</pubDate>
      
      <guid>http://dsk.mn/post/coffeescript-tips</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;即時関数の引数に別名をつける&lt;/h2&gt;

&lt;p&gt;jQuery のプラグイン書くときとかに使う。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;($ = jQuery) -&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;↓コンパイル
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;オブジェクトリテラルでオブジェクトを作る&lt;/h2&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;a = &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;b = &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;c = &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# =&amp;gt; { a: 3, b: true, c: &amp;#39;bar&amp;#39; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;分解代入で纏めて変数宣言&lt;/h2&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;a = b = c = &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;の代わりに下記のように書くことができる。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;↓コンパイル
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;nx&#34;&gt;_ref&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;superを引数付きでコールする&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;super()&lt;/code&gt;ではなく&lt;code&gt;super&lt;/code&gt;と書くことで引数を引き継いでコールしてくれる。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Foo&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;constructor: &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;(@a) -&amp;gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Bar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Foo&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;constructor: &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;super&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;bar = &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Bar&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# =&amp;gt; 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;便利な反面、&lt;code&gt;super&lt;/code&gt;と書いた時点で継承元の関数が実行されることに気をつけなければならない。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Foo&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;func: &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;executed!!&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Bar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Foo&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;func: &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;vi&#34;&gt;@superFunc = &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;super&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;@superFunc&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;bar = &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# =&amp;gt; &amp;#39;executed!!&amp;#39;&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# =&amp;gt; &amp;#39;foo&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;このように&lt;code&gt;super&lt;/code&gt;を&lt;code&gt;@superFunc&lt;/code&gt;に格納するつもりで書いたコードを実行すると、
&lt;code&gt;super&lt;/code&gt;を実行した戻りが&lt;code&gt;@superFunc&lt;/code&gt;に格納されることになる。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;比較演算子&lt;/h2&gt;

&lt;p&gt;比較が捗る。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;↓コンパイル
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;分解代入とクラスのthis代入の合わせ技&lt;/h2&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Foo&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;constructor: &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;({@a})-&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;foo = &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Foo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;a: &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# =&amp;gt; 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;Array comprehensionsのシュガー&lt;/h2&gt;

&lt;p&gt;ワンライナーで。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;countdown = &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;即時関数で。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;countdown = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;引数の並置&lt;/h2&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
  &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;↓コンパイル
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install node-canvas</title>
      <link>http://dsk.mn/post/install-node-canvas</link>
      <pubDate>Tue, 25 Mar 2014 09:45:30 UTC</pubDate>
      
      <guid>http://dsk.mn/post/install-node-canvas</guid>
      <description>

&lt;p&gt;依存バッケージをインストールしておかないと&lt;code&gt;node-canvas&lt;/code&gt;のインストールでコケる。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;CentOS&lt;/h2&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;yum install cairo cairo-devel cairomm-devel libjpeg-turbo-devel pango pango-devel pangomm pangomm-devel giflib-devel
npm install canvas
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;MacOSX&lt;/h2&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;brew install cairo
&lt;span class=&#34;nb&#34;&gt;export &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PKG_CONFIG_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/opt/X11/lib/pkgconfig
npm install canvas
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Access to title in IE8</title>
      <link>http://dsk.mn/post/access-to-title-in-ie8</link>
      <pubDate>Thu, 03 Apr 2014 05:29:57 UTC</pubDate>
      
      <guid>http://dsk.mn/post/access-to-title-in-ie8</guid>
      <description>&lt;p&gt;jQueryではIE8で&lt;code&gt;title&lt;/code&gt;へのアクセスができないので直接アクセスする。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>AtomEditorのパッケージ開発</title>
      <link>http://dsk.mn/post/development-atom-package</link>
      <pubDate>Thu, 03 Apr 2014 06:03:15 UTC</pubDate>
      
      <guid>http://dsk.mn/post/development-atom-package</guid>
      <description>

&lt;p&gt;逆引き的ななにか。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Package書くときに使う&lt;/h2&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;パッケージのSettingsにチェックボックスを表示する&lt;/h3&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;module.exports =&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;configDefaults:&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;highlightReference: &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;highlightError    : &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;文法がCoffeeScriptかを調べる&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Grammar::scopeName&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;editor = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;atom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;workspaceView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getActiveEditor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;scopeName = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;@editor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getGrammar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scopeName&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scopeName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;source.coffee&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scopeName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;source.litcoffee&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;カーソル下の単語の範囲の取得する&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cursor::getCurrentWordBufferRange()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;editor = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;atom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;workspaceView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getActiveEditor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;cursor = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;editor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cursors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;range = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getCurrentWordBufferRange&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;includeNonWordCharacters: &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;WorkspaceView#commandをoffする&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;WorkspaceView#command()&lt;/code&gt;では&lt;code&gt;WorkspaceView.data(&#39;documentation&#39;)&lt;/code&gt;にeventName/docStringを登録してるだけで、イベント自体はjQueryの&lt;code&gt;on()&lt;/code&gt;で聞いてる。
よってoffしたい時は普通に&lt;code&gt;WorkspaceView#off()&lt;/code&gt;すればよい。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nx&#34;&gt;atom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;workspaceView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;hoge:action&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;atom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;workspaceView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;hoge:action&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;Spec書く時に使う&lt;/h2&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;CoffeeScriptの言語パッケージをロードする&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PackageManager::resolvePackagePath(packageName)&lt;/code&gt;: パッケージ名からパッケージのパスを取得する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Syntax::loadGrammarSync(grammarPath)&lt;/code&gt;: 言語パッケージをロードする&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;languageCoffeeScriptPath = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;atom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resolvePackagePath&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;language-coffee-script&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;grammarDir = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resolve&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;languageCoffeeScriptPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;grammars&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;readdirSync&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;grammarDir&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;atom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;syntax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;loadGrammarSync&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resolve&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;grammarDir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;filename&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/docs/api/&#34;&gt;Atom API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/ardcore/9262498&#34;&gt;atom.io events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CoffeeScript Compiler</title>
      <link>http://dsk.mn/post/coffeescript-compiler</link>
      <pubDate>Fri, 02 May 2014 01:37:03 UTC</pubDate>
      
      <guid>http://dsk.mn/post/coffeescript-compiler</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/minodisk/coffee-refactor&#34;&gt;minodisk/coffee-refactor&lt;/a&gt;を作成中に&lt;a href=&#34;http://coffeescript.org/documentation/docs/&#34;&gt;index.coffee&lt;/a&gt;を読んでわかったことのメモ。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;nodes.coffee&lt;/h2&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Code#compileNode()&lt;/h3&gt;

&lt;p&gt;ノードをコンパイルする。
コンパイルの過程で&lt;code&gt;Scope&lt;/code&gt;インスタンスが作成される。
オプションに親のスコープを渡すと&lt;code&gt;variables&lt;/code&gt;は親のスコープ内で宣言された変数を考慮した変数のリストとなる。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;options =&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;scope: &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scope&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;indent: &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;compileNode&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;scope = &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scope&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;variables&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;scope.coffee&lt;/h2&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Scope#declaredVariables()&lt;/h3&gt;

&lt;p&gt;スコープ内で&lt;code&gt;var&lt;/code&gt;で宣言される変数の配列を返す。パラメータは含まれない。&lt;/p&gt;

&lt;p&gt;スコープ内で定義される全ての名前空間を取得するためには、さらにパラメータを含む必要が有るため下記のコードを使う。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;nv&#34;&gt;declaredSymbols = &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;(scope) -&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;realVars = &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;tempVars = &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;@variables&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;var&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;param&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tempVars&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;realVars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;push&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;realVars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;concat&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tempVars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Compassを改良する</title>
      <link>http://dsk.mn/post/refine-compass</link>
      <pubDate>Sun, 15 Jun 2014 06:04:06 UTC</pubDate>
      
      <guid>http://dsk.mn/post/refine-compass</guid>
      <description>

&lt;p&gt;キャッシュバスターの文字列が画像名に入ったスプライト画像が生成される問題を、
パフォーマンスを損なわずに解決する方法。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;問題点&lt;/h2&gt;

&lt;p&gt;スプライト画像の画像名内にキャッシュバスターが入ることで、
スプライト画像に変更が入ると画像名が変わってしまう。
バージョン管理や差分管理する上で不都合。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;コールバックを使う方法で生まれる問題点&lt;/h2&gt;

&lt;p&gt;既出の方法で&lt;code&gt;on_sprite_saved&lt;/code&gt;コールバックでスプライト画像をリネームし、
&lt;code&gt;on_stylesheet_saved&lt;/code&gt;でコンパイルされたCSSを書きなおすという解決法がある。
これはCompassのAPIに則った独立性の高い方法だが、
CSSを書き直す度にスプライト画像が書き出され
Sassの保存からCSSコンパイル完了までに時間がかってしまう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9183133/how-to-turn-off-compass-sass-cache-busting#answer-9332472&#34;&gt;css - How to turn off COMPASS SASS cache busting? - Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;モンキーパッチで根本的に解決する&lt;/h2&gt;

&lt;p&gt;Compass v0.12.2 で動作確認。
スプライト画像が&lt;code&gt;*-s[画像バイナリのMD5ハッシュ].png&lt;/code&gt;として生成され、
スプライトのソース画像に変更が入る度にスプライト画像名が変わってしまう問題に対応。
元々このハッシュはキャッシュ対策(キャッシュバスター)として入れられているものなので、
画像名内のハッシュを削除する代わりにCSSコンパイル時に&lt;code&gt;*.png?[画像バイナリのMD5ハッシュ]&lt;/code&gt;
のようにサーチクエリをつけて書き出すことで代替する。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span class=&#34;k&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;Compass&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;SassExtensions&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;Functions&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;Sprites&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# CSSコンパイル時にハッシュをサーチクエリにつける&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sprite_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;verify_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;sprite-url&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generate&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;generated_image_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;Sass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;Script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.png?&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uniqueness_hash&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;Sprites&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;SpriteMethods&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# ハッシュ抜きのファイル名を返す&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;name_and_hash&lt;/span&gt;
          &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;#{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.png&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# ハッシュ入りの画像ファイルは書き出されなくなっているはずなので古いファイルの削除は行わない&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cleanup_old_sprites&lt;/span&gt;
          &lt;span class=&#34;c1&#34;&gt;# do nothing&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;スプライト画像を多く使うプロジェクトでは、コンパイル時に時間が掛かることで
Sassの編集作業がストレスを感じる作業になりがちだった。
作業軽減のために採用したCompassの利用でストレスを感じるのは本末転倒なので、
多少汚い方法でも今回紹介した方法を使ってみるとよいかと思う。
ただし、この方法は&lt;code&gt;Compass&lt;/code&gt;と&lt;code&gt;Sass&lt;/code&gt;モジュールのバージョンが変わったら
動かなくなる可能性は十分にあるので注意。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>